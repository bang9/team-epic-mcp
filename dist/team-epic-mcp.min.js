#!/usr/bin/env node
import{Server as O}from"@modelcontextprotocol/sdk/server/index.js";import{StdioServerTransport as C}from"@modelcontextprotocol/sdk/server/stdio.js";import{ListToolsRequestSchema as k,CallToolRequestSchema as j}from"@modelcontextprotocol/sdk/types.js";import{google as v}from"googleapis";import I from"axios";import{parse as P}from"csv-parse/sync";var c={SPREADSHEET_ID:process.env.SPREADSHEET_ID||(()=>{throw new Error("SPREADSHEET_ID environment variable is required")})(),GOOGLE_SERVICE_ACCOUNT_BASE64:process.env.GOOGLE_SERVICE_ACCOUNT_BASE64,SHEET_NAMES:{EPICS:"Epics",EPIC_STATUS:"Epic_Status",STATUS_UPDATES:"Status_Updates"},SHEET_GIDS:{EPICS:0,EPIC_STATUS:1,STATUS_UPDATES:2},CACHE_DURATION:parseInt(process.env.CACHE_DURATION||"60000"),SHEETS_API:{BASE_URL:"https://sheets.googleapis.com/v4/spreadsheets",EXPORT_URL:"https://docs.google.com/spreadsheets/d"}};function T(r){let e=Object.entries(c.SHEET_GIDS).find(([n,o])=>o===r);if(!e)throw new Error(`No sheet found for GID ${r}`);let t=e[0],s=c.SHEET_NAMES[t];return`https://docs.google.com/spreadsheets/d/${c.SPREADSHEET_ID}/gviz/tq?tqx=out:csv&sheet=${s}`}var _=class{constructor(){this.cache=null;this.cacheTimestamp=0;this.initializeAuth(),this.sheets=v.sheets({version:"v4",auth:this.auth})}initializeAuth(){let e=c.GOOGLE_SERVICE_ACCOUNT_BASE64;if(e)try{let t=Buffer.from(e,"base64").toString("utf-8"),s=JSON.parse(t);this.auth=new v.auth.GoogleAuth({credentials:s,scopes:["https://www.googleapis.com/auth/spreadsheets"]}),console.log("Service Account authentication initialized successfully")}catch(t){throw console.error("Failed to initialize Service Account authentication:",t),new Error("Invalid GOOGLE_SERVICE_ACCOUNT_BASE64 environment variable. Please ensure it contains a valid base64-encoded Service Account JSON.")}else console.warn("No Service Account credentials found. Operating in read-only mode."),this.auth=null}async fetchAllData(){let e=Date.now();if(this.cache&&e-this.cacheTimestamp<c.CACHE_DURATION)return this.cache;if(this.auth)try{let i=(await this.sheets.spreadsheets.values.batchGet({spreadsheetId:c.SPREADSHEET_ID,ranges:[`${c.SHEET_NAMES.EPICS}!A:Z`,`${c.SHEET_NAMES.EPIC_STATUS}!A:Z`,`${c.SHEET_NAMES.STATUS_UPDATES}!A:Z`]})).data.valueRanges||[],a=this.parseSheetData(i[0]?.values||[]),p=this.parseSheetData(i[1]?.values||[]),g=this.parseSheetData(i[2]?.values||[]);return this.cache={epics:a,epicStatuses:p,statusUpdates:g},this.cacheTimestamp=e,this.cache}catch(o){console.error("Failed to batch fetch sheets:",o)}let[t,s,n]=await Promise.all([this.fetchSheet("Epics",c.SHEET_GIDS.EPICS),this.fetchSheet("Epic_Status",c.SHEET_GIDS.EPIC_STATUS),this.fetchSheet("Status_Updates",c.SHEET_GIDS.STATUS_UPDATES)]);return this.cache={epics:t,epicStatuses:s,statusUpdates:n},this.cacheTimestamp=e,this.cache}parseSheetData(e){if(e.length===0)return[];let t=e[0];return e.slice(1).map(n=>{let o={};return t.forEach((i,a)=>{let p=n[a]||"";["ios_progress","android_progress","js_progress"].includes(i)?p=parseInt(p)||0:i==="is_carry_over"&&(p=p.toString().toLowerCase()==="true"),o[i]=p}),o})}async fetchSheet(e,t){try{if(this.auth){let n=(await this.sheets.spreadsheets.values.get({spreadsheetId:c.SPREADSHEET_ID,range:`${e}!A:Z`})).data.values||[];return this.parseSheetData(n)}else{let s=T(t),n=await I.get(s);return P(n.data,{columns:!0,skip_empty_lines:!0,trim:!0,cast:(i,a)=>a.column==="ios_progress"||a.column==="android_progress"||a.column==="js_progress"?parseInt(i)||0:a.column==="is_carry_over"?i.toLowerCase()==="true":i})}}catch(s){return console.error(`Failed to fetch ${e} sheet:`,s),[]}}async updateValues(e,t){if(!this.auth)throw new Error("Write operations require Service Account authentication. Please set GOOGLE_SERVICE_ACCOUNT_BASE64 environment variable.");try{let s=await this.sheets.spreadsheets.values.update({spreadsheetId:c.SPREADSHEET_ID,range:e,valueInputOption:"USER_ENTERED",requestBody:{values:t}});return this.clearCache(),s.status===200}catch(s){console.error("Failed to update values:",s);let n="Failed to update values";throw s.errors&&s.errors[0]?n=s.errors[0].message:s.message&&(n=s.message),s.code===403?n="Permission denied. Please ensure the Service Account has edit access to the spreadsheet.":s.code===404?n="Spreadsheet or range not found. Please check the spreadsheet ID and range.":s.code===401&&(n="Authentication failed. Please check your Service Account credentials."),new Error(n)}}async appendValues(e,t){if(!this.auth)throw new Error("Write operations require Service Account authentication. Please set GOOGLE_SERVICE_ACCOUNT_BASE64 environment variable.");try{console.log("Attempting to append values to:",e),console.log("Values to append:",JSON.stringify(t));let s=await this.sheets.spreadsheets.values.append({spreadsheetId:c.SPREADSHEET_ID,range:e,valueInputOption:"USER_ENTERED",requestBody:{values:t}});return console.log("Response status:",s.status),console.log("Values appended successfully"),this.clearCache(),s.status===200}catch(s){console.error("Failed to append values:",s);let n="Failed to append values";throw s.errors&&s.errors[0]?n=s.errors[0].message:s.message&&(n=s.message),s.code===403?n="Permission denied. Please ensure the Service Account has edit access to the spreadsheet.":s.code===404?n="Spreadsheet or range not found. Please check the spreadsheet ID and range.":s.code===401&&(n="Authentication failed. Please check your Service Account credentials."),new Error(n)}}async updateEpicStatus(e,t){try{let s=await this.fetchAllData(),n=s.epicStatuses.findIndex(o=>o.epic_id===e);if(n===-1){let o=[e,t.ios_progress||0,t.android_progress||0,t.js_progress||0,t.overall_status||"",t.last_comment||"",new Date().toISOString(),t.updated_by||"System"];return await this.appendValues(`${c.SHEET_NAMES.EPIC_STATUS}!A:H`,[o])}else{let o=`${c.SHEET_NAMES.EPIC_STATUS}!A${n+2}:H${n+2}`,i=s.epicStatuses[n],a=[e,t.ios_progress??i.ios_progress,t.android_progress??i.android_progress,t.js_progress??i.js_progress,t.overall_status??i.overall_status,t.last_comment??i.last_comment,new Date().toISOString(),t.updated_by??i.updated_by];return await this.updateValues(o,[a])}}catch(s){return console.error("Error updating epic status:",s),!1}}async addStatusUpdate(e){try{let t=[new Date().toISOString(),e.epic_id,e.update_type,e.platform||"",e.message,e.author];return await this.appendValues(`${c.SHEET_NAMES.STATUS_UPDATES}!A:F`,[t])}catch(t){return console.error("Error adding status update:",t),!1}}async changeEpicStatus(e,t){try{let n=(await this.fetchAllData()).epics.findIndex(i=>i.epic_id===e);if(n===-1)return console.error(`Epic ${e} not found`),!1;let o=`${c.SHEET_NAMES.EPICS}!D${n+2}`;return await this.updateValues(o,[[t]])}catch(s){return console.error("Error changing epic status:",s),!1}}extractEpicIdFromUrl(e){let t=e.match(/\/browse\/([A-Z]+-\d+)$/);return t?t[1]:null}async createEpic(e){try{let t=this.extractEpicIdFromUrl(e.epic_url);if(!t)throw new Error("\uC62C\uBC14\uB978 Epic URL \uD615\uC2DD\uC774 \uC544\uB2D9\uB2C8\uB2E4. \uC608: https://company.atlassian.net/browse/PROJ-123");let s=e.epic_url,n=[t,e.epic_name,s,e.initial_status||"backlog",e.ios_assignee,e.android_assignee,e.js_assignee,e.start_date,e.target_date,e.prd_link||"",e.tip_link||""];try{await this.appendValues(`${c.SHEET_NAMES.EPICS}!A:K`,[n])}catch(p){throw new Error(`Failed to add epic to Epics sheet: ${p.message}`)}let o=[t,0,0,0,e.initial_status||"backlog","Epic created",new Date().toISOString(),e.author];try{await this.appendValues(`${c.SHEET_NAMES.EPIC_STATUS}!A:H`,[o])}catch(p){throw new Error(`Failed to add epic to Epic_Status sheet: ${p.message}`)}let i={epic_id:t,update_type:"status_change",message:`Epic created: ${e.epic_name}`,author:e.author};return await this.addStatusUpdate(i)||console.error("Warning: Failed to add creation record to Status_Updates"),t}catch(t){throw t.message.includes("Permission denied")||t.message.includes("API key")?new Error("API key is missing or invalid. Please set GOOGLE_API_KEY environment variable."):t}}clearCache(){this.cache=null,this.cacheTimestamp=0}};function D(r){return`\u{1F4CB} **${r.epic_name}** (${r.epic_id})
- \uC0C1\uD0DC: ${r.current_status}
- \uAE30\uAC04: ${r.start_date} ~ ${r.target_date}
- \uB2F4\uB2F9\uC790:
  - iOS: ${r.ios_assignee}
  - Android: ${r.android_assignee}
  - JS: ${r.js_assignee}
- [Epic Link](${r.epic_url})${r.prd_link?` | [PRD](${r.prd_link})`:""}${r.tip_link?` | [TIP](${r.tip_link})`:""}`}function S(r,e){let t=D(r);return e&&(t+=`

**\uD604\uC7AC \uC9C4\uD589 \uC0C1\uD669:**
- iOS: ${e.ios_progress}%
- Android: ${e.android_progress}%
- JS: ${e.js_progress}%
- \uC804\uCCB4 \uC0C1\uD0DC: ${e.overall_status}
- \uCD5C\uC2E0 \uCF54\uBA58\uD2B8: ${e.last_comment}
- \uC5C5\uB370\uC774\uD2B8: ${b(e.last_updated)} by ${e.updated_by}`),t}function E(r){let t={progress:"\u{1F4CA}",blocker:"\u{1F6AB}",resolved:"\u2705",comment:"\u{1F4AC}",status_change:"\u{1F504}"}[r.update_type]||"\u{1F4DD}",s=r.platform?`[${r.platform}] `:"";return`${t} **${b(r.timestamp)}** ${s}- ${r.message} (by ${r.author})`}function b(r){return new Date(r).toLocaleDateString("ko-KR",{month:"2-digit",day:"2-digit",hour:"2-digit",minute:"2-digit"})}var y=[{name:"list_epics",description:"Epic \uBAA9\uB85D\uC744 \uC870\uD68C\uD569\uB2C8\uB2E4. \uC0C1\uD0DC\uC640 \uB2F4\uB2F9\uC790\uB85C \uD544\uD130\uB9C1 \uAC00\uB2A5\uD569\uB2C8\uB2E4.",inputSchema:{type:"object",properties:{status:{type:"string",description:"Epic \uC0C1\uD0DC \uD544\uD130",enum:["backlog","kickoff","planning","development","code_review","testing","ready_to_release","released","done","on_hold"]},assignee:{type:"string",description:"\uB2F4\uB2F9\uC790 \uBA58\uC158 (\uC608: @Airen Kang)"}}},handler:(r,e)=>{let t=r.epics;e.status&&(t=t.filter(n=>n.current_status===e.status)),e.assignee&&(t=t.filter(n=>n.ios_assignee===e.assignee||n.android_assignee===e.assignee||n.js_assignee===e.assignee));let s=t.length>0?t.map(n=>{let o=r.epicStatuses.find(i=>i.epic_id===n.epic_id);return S(n,o)}).join(`

---

`):"\uC870\uAC74\uC5D0 \uB9DE\uB294 Epic\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.";return{content:[{type:"text",text:`# Epic \uBAA9\uB85D (${t.length}\uAC1C)

${s}`}]}}},{name:"get_epic_details",description:"\uD2B9\uC815 Epic\uC758 \uC0C1\uC138 \uC815\uBCF4\uC640 \uCD5C\uADFC \uC5C5\uB370\uC774\uD2B8\uB97C \uC870\uD68C\uD569\uB2C8\uB2E4.",inputSchema:{type:"object",properties:{epic_id:{type:"string",description:"Epic ID (\uC608: PROJ-123)"}},required:["epic_id"]},handler:(r,e)=>{let t=r.epics.find(i=>i.epic_id===e.epic_id);if(!t)return{content:[{type:"text",text:`Epic ID ${e.epic_id}\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.`}]};let s=r.epicStatuses.find(i=>i.epic_id===e.epic_id),n=r.statusUpdates.filter(i=>i.epic_id===e.epic_id).sort((i,a)=>new Date(a.timestamp).getTime()-new Date(i.timestamp).getTime()).slice(0,10),o=`# Epic \uC0C1\uC138 \uC815\uBCF4

${S(t,s)}

`;return n.length>0&&(o+=`## \u{1F4DC} \uCD5C\uADFC \uC5C5\uB370\uC774\uD2B8 (${n.length}\uAC1C)

`,o+=n.map(E).join(`
`)),{content:[{type:"text",text:o}]}}},{name:"get_epic_timeline",description:"\uD2B9\uC815 Epic\uC758 \uC804\uCCB4 \uD0C0\uC784\uB77C\uC778\uC744 \uC870\uD68C\uD569\uB2C8\uB2E4.",inputSchema:{type:"object",properties:{epic_id:{type:"string",description:"Epic ID"},limit:{type:"number",description:"\uC870\uD68C\uD560 \uC5C5\uB370\uC774\uD2B8 \uC218 (\uAE30\uBCF8\uAC12: 50)",default:50}},required:["epic_id"]},handler:(r,e)=>{let t=r.epics.find(o=>o.epic_id===e.epic_id);if(!t)return{content:[{type:"text",text:`Epic ID ${e.epic_id}\uB97C \uCC3E\uC744 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4.`}]};let s=r.statusUpdates.filter(o=>o.epic_id===e.epic_id).sort((o,i)=>new Date(i.timestamp).getTime()-new Date(o.timestamp).getTime()).slice(0,e.limit||50),n=`# ${t.epic_name} \uD0C0\uC784\uB77C\uC778

`;return s.length>0?n+=s.map(E).join(`
`):n+="\uC544\uC9C1 \uC5C5\uB370\uC774\uD2B8\uAC00 \uC5C6\uC2B5\uB2C8\uB2E4.",{content:[{type:"text",text:n}]}}},{name:"get_team_progress",description:"\uD300 \uC804\uCCB4\uC758 Epic \uC9C4\uD589 \uC0C1\uD669\uC744 \uC694\uC57D\uD569\uB2C8\uB2E4.",inputSchema:{type:"object",properties:{}},handler:(r,e)=>{let t=r.epics.filter(d=>!["backlog","done","released","on_hold"].includes(d.current_status)),s={};t.forEach(d=>{s[d.current_status]=(s[d.current_status]||0)+1});let n=0,o=0,i=0,a=0;t.forEach(d=>{let u=r.epicStatuses.find(m=>m.epic_id===d.epic_id);u&&(n+=u.ios_progress,o+=u.android_progress,i+=u.js_progress,a++)});let p=a>0?Math.round(n/a):0,g=a>0?Math.round(o/a):0,U=a>0?Math.round(i/a):0,f=r.statusUpdates.filter(d=>d.update_type==="blocker").filter(d=>!r.statusUpdates.find(m=>m.epic_id===d.epic_id&&m.update_type==="resolved"&&new Date(m.timestamp)>new Date(d.timestamp))),l=`# \u{1F3E2} \uD300 \uC9C4\uD589 \uD604\uD669

`;return l+=`## \u{1F4CA} Epic \uC0C1\uD0DC \uBD84\uD3EC
`,Object.entries(s).forEach(([d,u])=>{l+=`- ${d}: ${u}\uAC1C
`}),l+=`
## \u{1F3AF} \uD50C\uB7AB\uD3FC\uBCC4 \uD3C9\uADE0 \uC9C4\uD589\uB960
`,l+=`- iOS: ${p}%
`,l+=`- Android: ${g}%
`,l+=`- JS: ${U}%
`,f.length>0&&(l+=`
## \u{1F6AB} \uD604\uC7AC \uBE14\uB85C\uCEE4 (${f.length}\uAC1C)
`,f.slice(0,5).forEach(d=>{let u=r.epics.find(m=>m.epic_id===d.epic_id);l+=`- **${u?.epic_name||d.epic_id}**: ${d.message}
`})),{content:[{type:"text",text:l}]}}},{name:"find_blockers",description:"\uD574\uACB0\uB418\uC9C0 \uC54A\uC740 \uBE14\uB85C\uCEE4\uAC00 \uC788\uB294 Epic\uC744 \uCC3E\uC2B5\uB2C8\uB2E4.",inputSchema:{type:"object",properties:{}},handler:(r,e)=>{let t={};r.statusUpdates.forEach(o=>{o.update_type==="blocker"&&(r.statusUpdates.find(a=>a.epic_id===o.epic_id&&a.update_type==="resolved"&&a.platform===o.platform&&new Date(a.timestamp)>new Date(o.timestamp))||(t[o.epic_id]||(t[o.epic_id]=[]),t[o.epic_id].push(o)))});let s=Object.keys(t);if(s.length===0)return{content:[{type:"text",text:"\uD604\uC7AC \uD574\uACB0\uB418\uC9C0 \uC54A\uC740 \uBE14\uB85C\uCEE4\uAC00 \uC5C6\uC2B5\uB2C8\uB2E4. \u{1F389}"}]};let n=`# \u{1F6AB} \uBE14\uB85C\uCEE4\uAC00 \uC788\uB294 Epic (${s.length}\uAC1C)

`;return s.forEach(o=>{let i=r.epics.find(p=>p.epic_id===o),a=t[o];n+=`## ${i?.epic_name||o}
`,a.forEach(p=>{n+=E(p)+`
`}),n+=`
`}),{content:[{type:"text",text:n}]}}},{name:"search_by_assignee",description:"\uD2B9\uC815 \uB2F4\uB2F9\uC790\uAC00 \uD560\uB2F9\uB41C Epic\uC744 \uAC80\uC0C9\uD569\uB2C8\uB2E4.",inputSchema:{type:"object",properties:{assignee:{type:"string",description:"\uB2F4\uB2F9\uC790 \uBA58\uC158 (\uC608: @Airen Kang)"},platform:{type:"string",description:"\uD50C\uB7AB\uD3FC \uD544\uD130",enum:["iOS","Android","JS"]}},required:["assignee"]},handler:(r,e)=>{let t=r.epics;if(e.platform)switch(e.platform){case"iOS":t=t.filter(i=>i.ios_assignee===e.assignee);break;case"Android":t=t.filter(i=>i.android_assignee===e.assignee);break;case"JS":t=t.filter(i=>i.js_assignee===e.assignee);break}else t=t.filter(i=>i.ios_assignee===e.assignee||i.android_assignee===e.assignee||i.js_assignee===e.assignee);let s=t.filter(i=>!["done","released"].includes(i.current_status)),n=t.filter(i=>["done","released"].includes(i.current_status)),o=`# ${e.assignee}\uB2D8\uC758 Epic

`;return s.length>0&&(o+=`## \u{1F504} \uC9C4\uD589\uC911 (${s.length}\uAC1C)

`,s.forEach(i=>{let a=r.epicStatuses.find(p=>p.epic_id===i.epic_id);o+=S(i,a)+`

`})),n.length>0&&(o+=`## \u2705 \uC644\uB8CC (${n.length}\uAC1C)

`,n.forEach(i=>{o+=`- ${i.epic_name} (${i.epic_id})
`})),t.length===0&&(o=`${e.assignee}\uB2D8\uC5D0\uAC8C \uD560\uB2F9\uB41C Epic\uC774 \uC5C6\uC2B5\uB2C8\uB2E4.`),{content:[{type:"text",text:o}]}}}];var h=r=>{let e=r.match(/\/browse\/([A-Z]+-\d+)$/);return e?e[1]:null},w=r=>r.startsWith("@")&&r.length>1,x=r=>{if(!/^\d{4}-\d{2}-\d{2}$/.test(r))return!1;let t=new Date(r);return t instanceof Date&&!isNaN(t.getTime())},R=r=>h(r)!==null,A=[{name:"create_epic",description:"\uC0C8\uB85C\uC6B4 Epic\uC744 \uC0DD\uC131\uD569\uB2C8\uB2E4.",inputSchema:{type:"object",properties:{epic_name:{type:"string",description:"Epic \uC774\uB984"},ios_assignee:{type:"string",description:"iOS \uB2F4\uB2F9\uC790 (\uC608: @Airen Kang)"},android_assignee:{type:"string",description:"Android \uB2F4\uB2F9\uC790 (\uC608: @John Kim)"},js_assignee:{type:"string",description:"JS \uB2F4\uB2F9\uC790 (\uC608: @Sarah Lee)"},start_date:{type:"string",description:"\uC2DC\uC791\uC77C (YYYY-MM-DD \uD615\uC2DD)"},target_date:{type:"string",description:"\uBAA9\uD45C\uC77C (YYYY-MM-DD \uD615\uC2DD)"},epic_url:{type:"string",description:"Epic URL (\uC120\uD0DD\uC0AC\uD56D, \uC790\uB3D9 \uC0DD\uC131\uB428)"},prd_link:{type:"string",description:"PRD \uB9C1\uD06C (\uC120\uD0DD\uC0AC\uD56D)"},tip_link:{type:"string",description:"TIP \uB9C1\uD06C (\uC120\uD0DD\uC0AC\uD56D)"},initial_status:{type:"string",description:"\uCD08\uAE30 \uC0C1\uD0DC (\uC120\uD0DD\uC0AC\uD56D, \uAE30\uBCF8\uAC12: backlog)",enum:["backlog","kickoff","planning","development","code_review","testing","ready_to_release","released","done","on_hold"]},author:{type:"string",description:"\uC0DD\uC131\uC790"}},required:["epic_name","epic_url","ios_assignee","android_assignee","js_assignee","start_date","target_date","author"]},handler:async(r,e)=>{let t=[];if(R(e.epic_url)||t.push("Epic URL \uD615\uC2DD\uC774 \uC62C\uBC14\uB974\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4. \uC608: https://company.atlassian.net/browse/PROJ-123"),w(e.ios_assignee)||t.push("iOS \uB2F4\uB2F9\uC790\uB294 @\uB85C \uC2DC\uC791\uD574\uC57C \uD569\uB2C8\uB2E4"),w(e.android_assignee)||t.push("Android \uB2F4\uB2F9\uC790\uB294 @\uB85C \uC2DC\uC791\uD574\uC57C \uD569\uB2C8\uB2E4"),w(e.js_assignee)||t.push("JS \uB2F4\uB2F9\uC790\uB294 @\uB85C \uC2DC\uC791\uD574\uC57C \uD569\uB2C8\uB2E4"),x(e.start_date)||t.push("\uC2DC\uC791\uC77C\uC740 YYYY-MM-DD \uD615\uC2DD\uC774\uC5B4\uC57C \uD569\uB2C8\uB2E4"),x(e.target_date)||t.push("\uBAA9\uD45C\uC77C\uC740 YYYY-MM-DD \uD615\uC2DD\uC774\uC5B4\uC57C \uD569\uB2C8\uB2E4"),new Date(e.start_date)>new Date(e.target_date)&&t.push("\uC2DC\uC791\uC77C\uC740 \uBAA9\uD45C\uC77C\uBCF4\uB2E4 \uC774\uC804\uC774\uC5B4\uC57C \uD569\uB2C8\uB2E4"),e.epic_name.trim().length<3&&t.push("Epic \uC774\uB984\uC740 \uCD5C\uC18C 3\uC790 \uC774\uC0C1\uC774\uC5B4\uC57C \uD569\uB2C8\uB2E4"),t.length>0)return{content:[{type:"text",text:`\u274C \uC785\uB825 \uC624\uB958:
${t.map(s=>`- ${s}`).join(`
`)}`}]};try{return h(e.epic_url)?{content:[{type:"text",text:`\u2705 \uC0C8\uB85C\uC6B4 Epic\uC774 \uC0DD\uC131\uB418\uC5C8\uC2B5\uB2C8\uB2E4!

**Epic ID**: ${await r.createEpic(e)}
**Epic \uC774\uB984**: ${e.epic_name}
**\uB2F4\uB2F9\uC790**:
- iOS: ${e.ios_assignee}
- Android: ${e.android_assignee}
- JS: ${e.js_assignee}
**\uAE30\uAC04**: ${e.start_date} ~ ${e.target_date}
**\uC0C1\uD0DC**: ${e.initial_status||"backlog"}

Epic\uC774 \uC131\uACF5\uC801\uC73C\uB85C \uC0DD\uC131\uB418\uC5C8\uC2B5\uB2C8\uB2E4. \uC2A4\uD504\uB808\uB4DC\uC2DC\uD2B8\uC5D0\uC11C \uD655\uC778\uD558\uC138\uC694.`}]}:{content:[{type:"text",text:`\u274C Epic URL\uC5D0\uC11C ID\uB97C \uCD94\uCD9C\uD560 \uC218 \uC5C6\uC2B5\uB2C8\uB2E4: ${e.epic_url}`}]}}catch(s){console.error("Epic creation error:",s),console.error("Epic data:",e);let n="\uC54C \uC218 \uC5C6\uB294 \uC624\uB958";return s instanceof Error&&(n=s.message,s.message.includes("API key")?n+=`

API \uD0A4 \uC124\uC815\uC744 \uD655\uC778\uD574\uC8FC\uC138\uC694. MCP \uC11C\uBC84 \uD658\uACBD\uC5D0 GOOGLE_API_KEY\uAC00 \uC124\uC815\uB418\uC5B4 \uC788\uC5B4\uC57C \uD569\uB2C8\uB2E4.`:s.message.includes("Permission denied")?n+=`

\uC2A4\uD504\uB808\uB4DC\uC2DC\uD2B8 \uAD8C\uD55C\uC744 \uD655\uC778\uD574\uC8FC\uC138\uC694. API \uD0A4\uAC00 \uD574\uB2F9 \uC2A4\uD504\uB808\uB4DC\uC2DC\uD2B8\uC5D0 \uC4F0\uAE30 \uAD8C\uD55C\uC774 \uC788\uC5B4\uC57C \uD569\uB2C8\uB2E4.`:s.message.includes("404")&&(n+=`

\uC2A4\uD504\uB808\uB4DC\uC2DC\uD2B8 ID\uB098 \uC2DC\uD2B8 \uC774\uB984\uC774 \uC62C\uBC14\uB978\uC9C0 \uD655\uC778\uD574\uC8FC\uC138\uC694.`)),{content:[{type:"text",text:`\u274C Epic \uC0DD\uC131 \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4: ${n}`}]}}}},{name:"update_progress",description:"\uD50C\uB7AB\uD3FC\uBCC4 \uC9C4\uD589\uB960\uC744 \uC5C5\uB370\uC774\uD2B8\uD569\uB2C8\uB2E4. \uAC00\uC7A5 \uC790\uC8FC \uC0AC\uC6A9\uB418\uB294 \uAE30\uB2A5\uC785\uB2C8\uB2E4.",inputSchema:{type:"object",properties:{epic_url:{type:"string",description:"Epic URL (\uC608: https://company.atlassian.net/browse/PROJ-123)"},platform:{type:"string",description:"\uD50C\uB7AB\uD3FC",enum:["iOS","Android","JS"]},progress:{type:"number",description:"\uC9C4\uD589\uB960 (0-100)",minimum:0,maximum:100},comment:{type:"string",description:"\uC9C4\uD589 \uC0C1\uD669 \uCF54\uBA58\uD2B8 (\uC120\uD0DD\uC0AC\uD56D)"},author:{type:"string",description:"\uC791\uC131\uC790 (\uC608: @Airen Kang)"}},required:["epic_url","platform","progress","author"]},handler:async(r,e)=>{try{let t=h(e.epic_url);if(!t)return{content:[{type:"text",text:"\u274C \uC62C\uBC14\uB978 Epic URL \uD615\uC2DD\uC774 \uC544\uB2D9\uB2C8\uB2E4. \uC608: https://company.atlassian.net/browse/PROJ-123"}]};let n=(await r.fetchAllData()).epicStatuses.find(p=>p.epic_id===t)||{epic_id:t,ios_progress:0,android_progress:0,js_progress:0,overall_status:"",last_comment:"",last_updated:"",updated_by:""},o={updated_by:e.author};switch(e.platform){case"iOS":o.ios_progress=e.progress;break;case"Android":o.android_progress=e.progress;break;case"JS":o.js_progress=e.progress;break}e.comment&&(o.last_comment=e.comment);let i=await r.updateEpicStatus(t,o),a=await r.addStatusUpdate({epic_id:t,update_type:"progress",platform:e.platform,message:`${e.progress}% \uC644\uB8CC${e.comment?` - ${e.comment}`:""}`,author:e.author});return i&&a?{content:[{type:"text",text:`\u2705 ${t}\uC758 ${e.platform} \uC9C4\uD589\uB960\uC774 ${e.progress}%\uB85C \uC5C5\uB370\uC774\uD2B8\uB418\uC5C8\uC2B5\uB2C8\uB2E4.`}]}:{content:[{type:"text",text:`\u274C \uC5C5\uB370\uC774\uD2B8 \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4. (Status Update: ${i}, History: ${a})`}]}}catch(t){console.error("Progress update error:",t);let s="\uC54C \uC218 \uC5C6\uB294 \uC624\uB958";return t instanceof Error&&(s=t.message),{content:[{type:"text",text:`\u274C \uC9C4\uD589\uB960 \uC5C5\uB370\uC774\uD2B8 \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4: ${s}`}]}}}},{name:"add_comment",description:"Epic\uC5D0 \uCF54\uBA58\uD2B8\uB97C \uCD94\uAC00\uD569\uB2C8\uB2E4. \uD604\uC7AC \uC0C1\uD669\uC744 \uBE60\uB974\uAC8C \uACF5\uC720\uD560 \uB54C \uC0AC\uC6A9\uD569\uB2C8\uB2E4.",inputSchema:{type:"object",properties:{epic_url:{type:"string",description:"Epic URL (\uC608: https://company.atlassian.net/browse/PROJ-123)"},comment:{type:"string",description:"\uCF54\uBA58\uD2B8 \uB0B4\uC6A9"},platform:{type:"string",description:"\uD50C\uB7AB\uD3FC (\uC120\uD0DD\uC0AC\uD56D)",enum:["iOS","Android","JS"]},author:{type:"string",description:"\uC791\uC131\uC790"}},required:["epic_url","comment","author"]},handler:async(r,e)=>{try{let t=h(e.epic_url);if(!t)return{content:[{type:"text",text:"\u274C \uC62C\uBC14\uB978 Epic URL \uD615\uC2DD\uC774 \uC544\uB2D9\uB2C8\uB2E4. \uC608: https://company.atlassian.net/browse/PROJ-123"}]};let s=await r.updateEpicStatus(t,{last_comment:e.comment,updated_by:e.author}),n=await r.addStatusUpdate({epic_id:t,update_type:"comment",platform:e.platform,message:e.comment,author:e.author});return s&&n?{content:[{type:"text",text:"\u{1F4AC} \uCF54\uBA58\uD2B8\uAC00 \uCD94\uAC00\uB418\uC5C8\uC2B5\uB2C8\uB2E4."}]}:{content:[{type:"text",text:`\u274C \uCF54\uBA58\uD2B8 \uCD94\uAC00 \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4. (Status Update: ${s}, History: ${n})`}]}}catch(t){console.error("Comment add error:",t);let s="\uC54C \uC218 \uC5C6\uB294 \uC624\uB958";return t instanceof Error&&(s=t.message),{content:[{type:"text",text:`\u274C \uCF54\uBA58\uD2B8 \uCD94\uAC00 \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4: ${s}`}]}}}},{name:"report_blocker",description:"\uBE14\uB85C\uCEE4\uB97C \uB4F1\uB85D\uD569\uB2C8\uB2E4. \uC791\uC5C5\uC744 \uB9C9\uB294 \uC774\uC288\uAC00 \uBC1C\uC0DD\uD588\uC744 \uB54C \uC0AC\uC6A9\uD569\uB2C8\uB2E4.",inputSchema:{type:"object",properties:{epic_url:{type:"string",description:"Epic URL (\uC608: https://company.atlassian.net/browse/PROJ-123)"},platform:{type:"string",description:"\uBE14\uB85C\uCEE4\uAC00 \uBC1C\uC0DD\uD55C \uD50C\uB7AB\uD3FC",enum:["iOS","Android","JS"]},description:{type:"string",description:"\uBE14\uB85C\uCEE4 \uC124\uBA85"},author:{type:"string",description:"\uBCF4\uACE0\uC790"}},required:["epic_url","platform","description","author"]},handler:async(r,e)=>{let t=h(e.epic_url);if(!t)return{content:[{type:"text",text:"\u274C \uC62C\uBC14\uB978 Epic URL \uD615\uC2DD\uC774 \uC544\uB2D9\uB2C8\uB2E4. \uC608: https://company.atlassian.net/browse/PROJ-123"}]};let s=await r.addStatusUpdate({epic_id:t,update_type:"blocker",platform:e.platform,message:e.description,author:e.author});return await r.updateEpicStatus(t,{last_comment:`\u{1F6AB} [${e.platform}] \uBE14\uB85C\uCEE4: ${e.description}`,updated_by:e.author}),s?{content:[{type:"text",text:`\u{1F6AB} \uBE14\uB85C\uCEE4\uAC00 \uB4F1\uB85D\uB418\uC5C8\uC2B5\uB2C8\uB2E4: ${e.description}`}]}:{content:[{type:"text",text:"\u274C \uBE14\uB85C\uCEE4 \uB4F1\uB85D \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4."}]}}},{name:"resolve_blocker",description:"\uBE14\uB85C\uCEE4\uB97C \uD574\uACB0 \uCC98\uB9AC\uD569\uB2C8\uB2E4.",inputSchema:{type:"object",properties:{epic_url:{type:"string",description:"Epic URL (\uC608: https://company.atlassian.net/browse/PROJ-123)"},platform:{type:"string",description:"\uD574\uACB0\uB41C \uD50C\uB7AB\uD3FC",enum:["iOS","Android","JS"]},resolution:{type:"string",description:"\uD574\uACB0 \uBC29\uBC95 \uC124\uBA85"},author:{type:"string",description:"\uD574\uACB0\uC790"}},required:["epic_url","platform","resolution","author"]},handler:async(r,e)=>{let t=h(e.epic_url);if(!t)return{content:[{type:"text",text:"\u274C \uC62C\uBC14\uB978 Epic URL \uD615\uC2DD\uC774 \uC544\uB2D9\uB2C8\uB2E4. \uC608: https://company.atlassian.net/browse/PROJ-123"}]};let s=await r.addStatusUpdate({epic_id:t,update_type:"resolved",platform:e.platform,message:e.resolution,author:e.author});return await r.updateEpicStatus(t,{last_comment:`\u2705 [${e.platform}] \uBE14\uB85C\uCEE4 \uD574\uACB0: ${e.resolution}`,updated_by:e.author}),s?{content:[{type:"text",text:"\u2705 \uBE14\uB85C\uCEE4\uAC00 \uD574\uACB0\uB418\uC5C8\uC2B5\uB2C8\uB2E4!"}]}:{content:[{type:"text",text:"\u274C \uBE14\uB85C\uCEE4 \uD574\uACB0 \uCC98\uB9AC \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4."}]}}},{name:"change_epic_status",description:"Epic\uC758 \uC804\uCCB4 \uC0C1\uD0DC\uB97C \uBCC0\uACBD\uD569\uB2C8\uB2E4. (\uC608: planning \u2192 development)",inputSchema:{type:"object",properties:{epic_url:{type:"string",description:"Epic URL (\uC608: https://company.atlassian.net/browse/PROJ-123)"},new_status:{type:"string",description:"\uC0C8\uB85C\uC6B4 \uC0C1\uD0DC",enum:["backlog","kickoff","planning","development","code_review","testing","ready_to_release","released","done","on_hold"]},reason:{type:"string",description:"\uC0C1\uD0DC \uBCC0\uACBD \uC774\uC720 (\uC120\uD0DD\uC0AC\uD56D)"},author:{type:"string",description:"\uBCC0\uACBD\uC790"}},required:["epic_url","new_status","author"]},handler:async(r,e)=>{let t=h(e.epic_url);if(!t)return{content:[{type:"text",text:"\u274C \uC62C\uBC14\uB978 Epic URL \uD615\uC2DD\uC774 \uC544\uB2D9\uB2C8\uB2E4. \uC608: https://company.atlassian.net/browse/PROJ-123"}]};let s=await r.changeEpicStatus(t,e.new_status),n=e.reason?`\uC0C1\uD0DC \uBCC0\uACBD: ${e.new_status} - ${e.reason}`:`\uC0C1\uD0DC \uBCC0\uACBD: ${e.new_status}`,o=await r.addStatusUpdate({epic_id:t,update_type:"status_change",message:n,author:e.author});return await r.updateEpicStatus(t,{overall_status:e.new_status,last_comment:n,updated_by:e.author}),s&&o?{content:[{type:"text",text:`\u{1F504} Epic \uC0C1\uD0DC\uAC00 ${e.new_status}\uB85C \uBCC0\uACBD\uB418\uC5C8\uC2B5\uB2C8\uB2E4.`}]}:{content:[{type:"text",text:"\u274C \uC0C1\uD0DC \uBCC0\uACBD \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4."}]}}},{name:"mark_platform_done",description:"\uD2B9\uC815 \uD50C\uB7AB\uD3FC\uC758 \uC791\uC5C5\uC744 \uC644\uB8CC \uCC98\uB9AC\uD569\uB2C8\uB2E4.",inputSchema:{type:"object",properties:{epic_url:{type:"string",description:"Epic URL (\uC608: https://company.atlassian.net/browse/PROJ-123)"},platform:{type:"string",description:"\uC644\uB8CC\uB41C \uD50C\uB7AB\uD3FC",enum:["iOS","Android","JS"]},author:{type:"string",description:"\uC644\uB8CC \uCC98\uB9AC\uC790"}},required:["epic_url","platform","author"]},handler:async(r,e)=>{let t=h(e.epic_url);if(!t)return{content:[{type:"text",text:"\u274C \uC62C\uBC14\uB978 Epic URL \uD615\uC2DD\uC774 \uC544\uB2D9\uB2C8\uB2E4. \uC608: https://company.atlassian.net/browse/PROJ-123"}]};let s={updated_by:e.author,last_comment:`${e.platform} \uAC1C\uBC1C \uC644\uB8CC`};switch(e.platform){case"iOS":s.ios_progress=100;break;case"Android":s.android_progress=100;break;case"JS":s.js_progress=100;break}let n=await r.updateEpicStatus(t,s),o=await r.addStatusUpdate({epic_id:t,update_type:"progress",platform:e.platform,message:"\uAC1C\uBC1C \uC644\uB8CC (100%)",author:e.author});return n&&o?{content:[{type:"text",text:`\u{1F389} ${e.platform} \uD50C\uB7AB\uD3FC \uC791\uC5C5\uC774 \uC644\uB8CC\uB418\uC5C8\uC2B5\uB2C8\uB2E4!`}]}:{content:[{type:"text",text:"\u274C \uC644\uB8CC \uCC98\uB9AC \uC911 \uC624\uB958\uAC00 \uBC1C\uC0DD\uD588\uC2B5\uB2C8\uB2E4."}]}}},{name:"add_to_sprint",description:"\uC2A4\uD504\uB9B0\uD2B8\uC5D0 Epic\uC744 \uCD94\uAC00\uD569\uB2C8\uB2E4.",inputSchema:{type:"object",properties:{epic_url:{type:"string",description:"Epic URL (\uC608: https://company.atlassian.net/browse/PROJ-123)"},sprint_name:{type:"string",description:"\uC2A4\uD504\uB9B0\uD2B8 \uC774\uB984"},sprint_goal:{type:"string",description:"\uC774\uBC88 \uC2A4\uD504\uB9B0\uD2B8\uC758 \uBAA9\uD45C (\uC120\uD0DD\uC0AC\uD56D)"},is_carry_over:{type:"boolean",description:"\uC774\uC804 \uC2A4\uD504\uB9B0\uD2B8\uC5D0\uC11C \uC774\uC6D4\uB41C Epic\uC778\uC9C0",default:!1}},required:["epic_url","sprint_name"]},handler:async(r,e)=>h(e.epic_url)?{content:[{type:"text",text:"\u274C Sprint \uAE30\uB2A5\uC774 \uC81C\uAC70\uB418\uC5C8\uC2B5\uB2C8\uB2E4. Sprint_View\uAC00 \uB354 \uC774\uC0C1 \uC0AC\uC6A9\uB418\uC9C0 \uC54A\uC2B5\uB2C8\uB2E4."}]}:{content:[{type:"text",text:"\u274C \uC62C\uBC14\uB978 Epic URL \uD615\uC2DD\uC774 \uC544\uB2D9\uB2C8\uB2E4. \uC608: https://company.atlassian.net/browse/PROJ-123"}]}}];var $=class{constructor(){this.server=new O({name:"team-epic-mcp",version:"2.0.0"},{capabilities:{tools:{}}}),this.sheetsClient=new _,this.tools=[...y.map(e=>({name:e.name,description:e.description,inputSchema:e.inputSchema})),...A.map(e=>({name:e.name,description:e.description,inputSchema:e.inputSchema}))],this.setupHandlers()}setupHandlers(){this.server.setRequestHandler(k,async()=>({tools:this.tools})),this.server.setRequestHandler(j,async e=>{let{name:t,arguments:s}=e.params;try{let n=y.find(i=>i.name===t);if(n){let i=await this.sheetsClient.fetchAllData();return n.handler(i,s)}let o=A.find(i=>i.name===t);if(o)return await o.handler(this.sheetsClient,s);throw new Error(`Unknown tool: ${t}`)}catch(n){return console.error(`Error executing tool ${t}:`,n),{content:[{type:"text",text:`Error: ${n instanceof Error?n.message:"Unknown error"}`}]}}})}async start(){let e=new C;await this.server.connect(e),console.error("Team Epic MCP Server started"),console.error(`Connected to spreadsheet: ${c.SPREADSHEET_ID}`)}},J=new $;J.start().catch(console.error);
